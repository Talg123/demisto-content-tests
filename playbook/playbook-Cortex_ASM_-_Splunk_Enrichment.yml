contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.8.0
    itemVersion: 1.7.30
    packID: CortexAttackSurfaceManagement
    packName: Cortex Attack Surface Management
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: 'Given the IP address this playbook enriches information from Splunk
  results relevant to ASM alerts. '
id: Cortex ASM - Splunk Enrichment
inputs:
- description: 'Remote IP in an incident/alert. '
  key: IP
  playbookInputQuery: null
  required: true
  value:
    complex:
      accessor: remoteip
      root: alert
name: Cortex ASM - Splunk Enrichment
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 555d3ba5-f9df-490a-866e-220a4d5ac8e1
      iscommand: false
      name: ""
      version: -1
    taskid: 555d3ba5-f9df-490a-866e-220a4d5ac8e1
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 460,
          "y": 50
        }
      }
  "1":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: SplunkPy
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                root: modules
          operator: isExists
      label: "yes"
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "17"
      "yes":
      - "12"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Check if Splunk integration is enabled
      id: 9b5ea0fe-89d8-46f5-8c12-42b6ba84ab68
      iscommand: false
      name: Is Splunk Enabled?
      type: condition
      version: -1
    taskid: 9b5ea0fe-89d8-46f5-8c12-42b6ba84ab68
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 460,
          "y": 190
        }
      }
  "3":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: Result
                root: Splunk
          operator: isNotEmpty
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "17"
      "yes":
      - "11"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks if there are any splunk results.
      id: 511cf284-ba67-4bb1-8a9d-029be02645f3
      iscommand: false
      name: Is there Splunk results?
      type: condition
      version: -1
    taskid: 511cf284-ba67-4bb1-8a9d-029be02645f3
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 460,
          "y": 610
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: a06f9e95-e20e-4bfb-8c66-b914c81968da
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: a06f9e95-e20e-4bfb-8c66-b914c81968da
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 20,
          "y": 1670
        }
      }
  "11":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: =[]}
                root: ${
                transformers:
                - args:
                    key:
                      iscontext: true
                      value:
                        simple: Splunk.Result
                    list:
                      value:
                        simple: user,email,user_name,user_id,src_user,src_user_name,owner_email,owner,owner_id,username,AD_username
                  operator: GetValuesOfMultipleFields
          operator: isNotEmpty
          right:
            value: {}
      label: "yes"
    continueonerrortype: ""
    id: "11"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "15"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks if there are any users found in the Splunk results.
      id: 2a721140-47b3-4f16-82c8-1998b0db854c
      iscommand: false
      name: Are there any users in the Splunk results?
      type: condition
      version: -1
    taskid: 2a721140-47b3-4f16-82c8-1998b0db854c
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 460,
          "y": 870
        }
      }
  "12":
    continueonerrortype: ""
    id: "12"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 0
    scriptarguments:
      earliest_time:
        simple: -7d
      event_limit:
        simple: "100"
      query:
        complex:
          root: inputs.IP
          transformers:
          - args:
              prefix:
                value:
                  simple: dest_ip=
              suffix:
                value:
                  simple: ' OR '
            operator: concat
          - args:
              prefix: {}
              suffix:
                value:
                  simple: |-
                    dest_translated_ip=IPADDRESS OR ip=IPADDRESS OR src_ip=IPADDRESS OR src_translated_ip=IPADDRESS OR client_ip=IPADDRESS OR server_ip=IPADDRESS OR ip_address=IPADDRESS OR source_ip=IPADDRESS OR
                    destination_ip=IPADDRESS
            operator: concat
          - args:
              limit: {}
              replaceWith:
                iscontext: true
                value:
                  simple: inputs.IP
              toReplace:
                value:
                  simple: IPADDRESS
            operator: replace
          - args:
              prefix: {}
              suffix:
                value:
                  simple: ' AND (user=* OR email=* OR  user_name=* OR  user_id=* OR
                    src_user=* OR src_user_name=* OR owner_email=* OR owner=* OR owner_id=*
                    OR username=* OR AD_username=*) AND (user!="unknown" OR email!="unknown"
                    OR  user_name!="unknown" OR  user_id!="unknown" OR src_user!="unknown"
                    OR src_user_name!="unknown" OR owner_email!="unknown" OR owner!="unknown"
                    OR owner_id!="unknown" OR username!="unknown" OR AD_username!="unknown")
                    AND (user!="null" OR email!="null" OR  user_name!="null" OR  user_id!="null"
                    OR src_user!="null" OR src_user_name!="null" OR owner_email!="null"
                    OR owner!="null" OR owner_id!="null" OR username!="null" OR AD_username!="null")'
            operator: concat
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Searches Splunk for events.
      id: 2ba5ca09-bce6-46c2-8d6d-cc5f85b4feac
      iscommand: true
      name: Splunk search for potential service owners
      script: '|||splunk-search'
      type: regular
      version: -1
    taskid: 2ba5ca09-bce6-46c2-8d6d-cc5f85b4feac
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 460,
          "y": 430
        }
      }
  "14":
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "16"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: asmserviceowner
      keys:
        simple: name,email,source,timestamp
      val1:
        complex:
          accessor: =[]}
          root: ${
          transformers:
          - args:
              key:
                iscontext: true
                value:
                  simple: Splunk.Result
              list:
                value:
                  simple: user,email,user_name,user_id,src_user,src_user_name,owner_email,owner,owner_id,username,AD_username
            operator: GetValuesOfMultipleFields
          - operator: uniq
      val2:
        simple: n/a
      val3:
        simple: Splunk
      val4:
        complex:
          root: TimeNowUnix
          transformers:
          - operator: TimeStampToDate
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: |-
        Automation used to more easily populate a grid field. This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well. For example:
        `!GridFieldSetup keys=ip,src val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" gridfiled="gridfield"`
      id: 7665122c-527b-4530-8b7f-3ce9284a447f
      iscommand: false
      name: Set service owner grid field
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 7665122c-527b-4530-8b7f-3ce9284a447f
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 460,
          "y": 1300
        }
      }
  "15":
    continueonerrortype: ""
    id: "15"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "14"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |
        Retrieves the current date and time.
      id: 944357e5-987c-4489-8a4b-f4b0df69929c
      iscommand: false
      name: Get current time
      script: GetTime
      type: regular
      version: -1
    taskid: 944357e5-987c-4489-8a4b-f4b0df69929c
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 460,
          "y": 1130
        }
      }
  "16":
    continueonerrortype: ""
    id: "16"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: asmenrichmentstatus
      keys:
        simple: source,record_exists,timestamp
      val1:
        simple: Splunk
      val2:
        simple: "true"
      val3:
        simple: TIMESTAMP
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: |-
        Automation used to more easily populate a grid field. This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 00aee711-9475-4fe4-8f9e-2651fee455b8
      iscommand: false
      name: Set ASM enrichment status to true
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 00aee711-9475-4fe4-8f9e-2651fee455b8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 460,
          "y": 1470
        }
      }
  "17":
    continueonerrortype: ""
    id: "17"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    scriptarguments:
      gridfield:
        simple: asmenrichmentstatus
      keys:
        simple: source,record_exists,timestamp
      val1:
        simple: Splunk
      val2:
        simple: "false"
      val3:
        simple: TIMESTAMP
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: |-
        Automation used to more easily populate a grid field. This is necessary when you want to assign certain values as static or if you have context paths that you will assign to different values as well.  Instead of a value you can enter `TIMESTAMP` to get the current timestamp in ISO format. For example:
        `!GridFieldSetup keys=ip,src,timestamp val1=${AWS.EC2.Instances.NetworkInterfaces.PrivateIpAddress} val2="AWS" val3="TIMESTAMP" gridfiled="gridfield"`
      id: 36bc4d79-224b-47db-8d54-718bf2df84e2
      iscommand: false
      name: Set ASM enrichment status to false
      script: GridFieldSetup
      type: regular
      version: -1
    taskid: 36bc4d79-224b-47db-8d54-718bf2df84e2
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 20,
          "y": 790
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "11_15_yes": 0.58,
      "11_8_#default#": 0.39,
      "1_12_yes": 0.57,
      "3_11_yes": 0.59
    },
    "paper": {
      "dimensions": {
        "height": 1685,
        "width": 820,
        "x": 20,
        "y": 50
      }
    }
  }

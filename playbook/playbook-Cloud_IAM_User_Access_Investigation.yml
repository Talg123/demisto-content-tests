contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.6.0
    itemVersion: 2.0.12
    packID: Core
    packName: Core - Investigation and Response
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: |-
  Investigate and respond to Cortex XSIAM alerts where a Cloud IAM user access key is used suspiciously to access the cloud environment.
  The following alerts are supported for AWS, Azure, and GCP environments.
  Penetration testing tool attempt
  Penetration testing tool activity
  Suspicious API call from a Tor exit node
id: Cloud IAM User Access Investigation
inputs:
- description: Whether to execute the user remediation flow automatically.
  key: autoAccessKeyRemediation
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: Whether to block the indicators automatically.
  key: autoBlockIndicators
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: Whether to execute the user remediation flow automatically.
  key: autoUserRemediation
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: |-
    Choose the remediation type for the user's access key.

    AWS available types:
    Disable - for disabling the user's access key.
    Delete - for deleting the user's access key.
  key: AWS-accessKeyRemediationType
  playbookInputQuery: null
  required: false
  value:
    simple: Disable
- description: |-
    Choose the remediation type for the user involved.

    AWS available types:
    Delete - for deleting the user.
    Revoke - for revoking the user's credentials.
  key: AWS-userRemediationType
  playbookInputQuery: null
  required: false
  value:
    simple: Revoke
- description: |-
    Choose the remediation type for the user involved.

    Azure available types:
    Disable - for disabling the user.
    Delete - for deleting the user.
  key: Azure-userRemediationType
  playbookInputQuery: null
  required: false
  value:
    simple: Disable
- description: |-
    Choose the remediation type for the user's access key.

    GCP available types:
    Disable - For disabling the user's access key.
    Delete - For deleting the user's access key.
  key: GCP-accessKeyRemediationType
  playbookInputQuery: null
  required: false
  value:
    simple: Disable
- description: |-
    Choose the remediation type for the user involved.

    GCP available types:
    Delete - For deleting the user.
    Disable - For disabling the user.
  key: GCP-userRemediationType
  playbookInputQuery: null
  required: false
  value:
    simple: Disable
- description: Whether to close alerts automatically as a false positive. (True/False).
  key: ShouldCloseAutomatically
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: Whether to open a ticket automatically in a ticketing system. (True/False).
  key: ShouldOpenTicket
  playbookInputQuery: null
  required: false
  value:
    simple: "False"
- description: A short description of the ticket.
  key: serviceNowShortDescription
  playbookInputQuery: null
  required: false
  value:
    simple: XSIAM Incident ID - ${parentIncidentFields.incident_id}
- description: The impact for the new ticket. Leave empty for ServiceNow default impact.
  key: serviceNowImpact
  playbookInputQuery: null
  required: false
  value: {}
- description: The urgency of the new ticket. Leave empty for ServiceNow default urgency.
  key: serviceNowUrgency
  playbookInputQuery: null
  required: false
  value: {}
- description: The severity of the new ticket. Leave empty for ServiceNow default
    severity.
  key: serviceNowSeverity
  playbookInputQuery: null
  required: false
  value: {}
- description: The ServiceNow ticket type. Options are "incident", "problem", "change_request",
    "sc_request", "sc_task", or "sc_req_item". Default is "incident".
  key: serviceNowTicketType
  playbookInputQuery: null
  required: false
  value: {}
- description: The category of the ServiceNow ticket.
  key: serviceNowCategory
  playbookInputQuery: null
  required: false
  value: {}
- description: The group to which to assign the new ticket.
  key: serviceNowAssignmentGroup
  playbookInputQuery: null
  required: false
  value: {}
- description: The urgency with which the ticket should be addressed. Allowed values
    are "urgent", "high", "normal", or "low".
  key: ZendeskPriority
  playbookInputQuery: null
  required: false
  value: {}
- description: The user who requested this ticket.
  key: ZendeskRequester
  playbookInputQuery: null
  required: false
  value: {}
- description: The state of the ticket. Allowed values are "new", "open", "pending",
    "hold", "solved", or "closed".
  key: ZendeskStatus
  playbookInputQuery: null
  required: false
  value: {}
- description: The value of the subject field for this ticket.
  key: ZendeskSubject
  playbookInputQuery: null
  required: false
  value:
    simple: XSIAM Incident ID - ${parentIncidentFields.incident_id}
- description: The array of tags applied to this ticket.
  key: ZendeskTags
  playbookInputQuery: null
  required: false
  value: {}
- description: The type of this ticket. Allowed values are "problem", "incident",
    "question", or "task".
  key: ZendeskType
  playbookInputQuery: null
  required: false
  value: {}
- description: The agent currently assigned to the ticket.
  key: ZendeskAssigne
  playbookInputQuery: null
  required: false
  value: {}
- description: The users currently CC'ed on the ticket.
  key: ZendeskCollaborators
  playbookInputQuery: null
  required: false
  value: {}
- description: The ticket description.
  key: description
  playbookInputQuery: null
  required: false
  value:
    simple: ${parentIncidentFields.description}. ${parentIncidentFields.xdr_url}
- description: 'Whether to append a new comment to the ticket for each endpoint in
    the incident. Possible values: True/False.'
  key: addCommentPerEndpoint
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: Comment for the ticket.
  key: CommentToAdd
  playbookInputQuery: null
  required: false
  value:
    simple: '${alert.name}. Alert ID: ${alert.id}'
name: Cloud IAM User Access Investigation
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "61"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 40b4c735-392d-4c86-8ab3-6d49441a813d
      iscommand: false
      name: ""
      version: -1
    taskid: 40b4c735-392d-4c86-8ab3-6d49441a813d
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 550,
          "y": -190
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "81"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: c48a2862-f3e1-4dd3-89b7-8590f645298b
      iscommand: false
      name: 'Remediation '
      type: title
      version: -1
    taskid: c48a2862-f3e1-4dd3-89b7-8590f645298b
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1790
        }
      }
  "19":
    continueonerrortype: ""
    id: "19"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 1e498a1e-df55-4805-8fa9-973ba6554ac1
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 1e498a1e-df55-4805-8fa9-973ba6554ac1
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 550,
          "y": 2450
        }
      }
  "21":
    continueonerrortype: ""
    id: "21"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      False Positive:
      - "64"
      True positive:
      - "83"
    note: false
    quietmode: 2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Based on the collected data investigation, select the verdict of
        the alert.
      id: 08cf3974-ddc8-4694-8a1a-e737b3e69973
      iscommand: false
      name: Manual verdict decision
      type: condition
      version: -1
    taskid: 08cf3974-ddc8-4694-8a1a-e737b3e69973
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 880,
          "y": 1080
        }
      }
  "22":
    continueonerrortype: ""
    id: "22"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 043b96c8-7870-4754-823d-3a0658690cf2
      iscommand: false
      name: False Positive
      type: title
      version: -1
    taskid: 043b96c8-7870-4754-823d-3a0658690cf2
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 1220,
          "y": 1770
        }
      }
  "50":
    continueonerrortype: ""
    id: "50"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "66"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: cee3b559-fdae-4404-863c-39f9dd375566
      iscommand: false
      name: Verdict
      type: title
      version: -1
    taskid: cee3b559-fdae-4404-863c-39f9dd375566
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 550,
          "y": 600
        }
      }
  "57":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              simple: inputs.ShouldCloseAutomatically
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    continueonerrortype: ""
    id: "57"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "65"
      "yes":
      - "58"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Close the alert and finish the investigation?
      id: 9bc32470-1e47-447a-8a0b-f41a4049394c
      iscommand: false
      name: Close the alert automatically after remediation?
      type: condition
      version: -1
    taskid: 9bc32470-1e47-447a-8a0b-f41a4049394c
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 550,
          "y": 2110
        }
      }
  "58":
    continueonerrortype: ""
    id: "58"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    quietmode: 0
    scriptarguments:
      closeReason:
        simple: Resolved - True positive
    separatecontext: false
    skipunavailable: false
    task:
      brand: Builtin
      description: commands.local.cmd.close.inv
      id: 2c77b9cd-84ff-48cc-86cd-a3cb3f439314
      iscommand: true
      name: Close the alert automatically
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 2c77b9cd-84ff-48cc-86cd-a3cb3f439314
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 770,
          "y": 2280
        }
      }
  "61":
    continueonerrortype: ""
    id: "61"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "67"
    note: false
    quietmode: 0
    scriptarguments:
      alert_ids:
        complex:
          accessor: id
          root: alert
      extend-context:
        simple: alertData=
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns information about each alert ID.
      id: 8634ca8c-2535-4d70-857f-d5e77b87b09e
      iscommand: true
      name: Fetch alert extra data
      script: '|||core-get-cloud-original-alerts'
      type: regular
      version: -1
    taskid: 8634ca8c-2535-4d70-857f-d5e77b87b09e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 550,
          "y": -50
        }
      }
  "64":
    continueonerrortype: ""
    id: "64"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "22"
    note: false
    quietmode: 0
    scriptarguments:
      ShouldCloseAutomatically:
        complex:
          root: inputs.ShouldCloseAutomatically
      alertName:
        complex:
          accessor: name
          root: alert
      sourceIP:
        complex:
          accessor: hostip
          root: alert
      username:
        complex:
          accessor: username
          root: alert
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: |
        This playbook handles false positive alerts.
      id: 8eded0e7-c70b-40a6-8515-6a3215682533
      iscommand: false
      name: Handle False Positive Alerts
      playbookId: Handle False Positive Alerts
      type: playbook
      version: -1
    taskid: 8eded0e7-c70b-40a6-8515-6a3215682533
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 1220,
          "y": 1250
        }
      }
  "65":
    continueonerrortype: ""
    id: "65"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "19"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Continue the investigation.
      id: 62cfaa81-81fb-4166-8f73-e3e903c5e3c5
      iscommand: false
      name: Close the alert manually
      type: regular
      version: -1
    taskid: 62cfaa81-81fb-4166-8f73-e3e903c5e3c5
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 320,
          "y": 2280
        }
      }
  "66":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: alert.name
          operator: containsGeneral
          right:
            value:
              simple: Suspicious API call from a Tor exit node
        - ignorecase: true
          left:
            iscontext: true
            value:
              complex:
                accessor: Score
                filters:
                - - ignorecase: true
                    left:
                      iscontext: true
                      value:
                        simple: DBotScore.Indicator
                    operator: isEqualString
                    right:
                      iscontext: true
                      value:
                        simple: alert.hostip
                root: DBotScore
          operator: isEqualNumber
          right:
            value:
              simple: "3"
      label: "yes"
    continueonerrortype: ""
    id: "66"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "73"
      "yes":
      - "83"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether the alert is malicious based on either one of the
        following:<br>- Source IP address with a malicious DBot score.<br>- A Tor
        IP address.
      id: cfb35229-4702-4fa4-8b8b-f9d86778c329
      iscommand: false
      name: Is activity malicious?
      type: condition
      version: -1
    taskid: cfb35229-4702-4fa4-8b8b-f9d86778c329
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 550,
          "y": 750
        }
      }
  "67":
    continueonerrortype: ""
    id: "67"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "68"
    note: false
    quietmode: 0
    scriptarguments:
      extend-context:
        simple: alertJson=
      ignore-outputs:
        simple: "true"
      input:
        complex:
          accessor: original_alert_json
          root: alertData.alerts
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Loads a JSON from a string input, and returns a JSON object.
      id: 4f102212-5337-40d7-8477-f983500618fe
      iscommand: false
      name: Load alert JSON
      script: LoadJSON
      type: regular
      version: -1
    taskid: 4f102212-5337-40d7-8477-f983500618fe
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 550,
          "y": 120
        }
      }
  "68":
    continueonerrortype: ""
    id: "68"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "80"
      - "82"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 3d769696-08fc-4298-880f-a47793a9a3f2
      iscommand: false
      name: Analysis
      type: title
      version: -1
    taskid: 3d769696-08fc-4298-880f-a47793a9a3f2
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 550,
          "y": 280
        }
      }
  "73":
    continueonerrortype: ""
    id: "73"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "21"
    note: false
    quietmode: 2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: To determine if this is a true positive event, review the operations
        performed by the access key and the user in the recent time frame.<br>Search
        for the following items:<br>-Investigate the operation performed by the access
        key and examine the executed operations, by who it was executed, on which
        resource, and the operation status.<br>-Investigate operations performed by
        the user and examine the executed operations, by who it was executed, on which
        resource, and the operation status.<br>-Look at any persistence, for example
        - a new user creation or key, etc.<br>-Look at any lateral movement operations.
        For example, an operation can be = AsumeRole.<br>As an extra validation step,
        it is recommended to query the user and/or the user’s manager regarding the
        investigated suspicious activity.
      id: 6e5634a7-7393-4cfa-8bb4-b2beca7a782e
      iscommand: false
      name: Investigate collected data
      type: regular
      version: -1
    taskid: 6e5634a7-7393-4cfa-8bb4-b2beca7a782e
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 880,
          "y": 920
        }
      }
  "80":
    continueonerrortype: ""
    id: "80"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "50"
    note: false
    quietmode: 2
    scriptarguments:
      CloseReason:
        simple: Resolved - False Positive,Resolved - Duplicate Incident,Resolved -
          Known Issue
      Domain:
        complex:
          accessor: domainname
          root: alert
      FileSHA256:
        complex:
          accessor: initiatorsha256
          root: alert
      IP:
        complex:
          accessor: hostip
          root: alert
      URL:
        complex:
          accessor: url
          root: alert
      User:
        complex:
          accessor: username
          root: alert
      query:
        simple: sourceBrand:"${alert.sourceBrand}" and name:"${alert.name}" and username:"${alert.username}"
          and hostip:"${alert.hostip}"
      threshold:
        simple: "2"
    separatecontext: true
    skipunavailable: false
    task:
      brand: ""
      description: This playbook checks prior alert closing reasons and performs enrichment
        and prevalence checks on different IOC types. It then returns the information
        needed to establish the alert's verdict.
      id: 3e6e0a3b-c353-46a8-895c-e46d5fcb4efe
      iscommand: false
      name: Enrichment for Verdict
      playbookId: Enrichment for Verdict
      type: playbook
      version: -1
    taskid: 3e6e0a3b-c353-46a8-895c-e46d5fcb4efe
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 760,
          "y": 430
        }
      }
  "81":
    continueonerrortype: ""
    id: "81"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "57"
    note: false
    quietmode: 0
    scriptarguments:
      AWS-accessKeyRemediationType:
        complex:
          root: inputs.AWS-accessKeyRemediationType
      AWS-resourceRemediationType:
        simple: Stop
      AWS-userRemediationType:
        complex:
          root: inputs.AWS-userRemediationType
      Azure-resourceRemediationType:
        simple: Poweroff
      Azure-userRemediationType:
        complex:
          root: inputs.Azure-userRemediationType
      GCP-accessKeyRemediationType:
        complex:
          root: inputs.GCP-accessKeyRemediationType
      GCP-resourceRemediationType:
        simple: Stop
      GCP-userRemediationType:
        complex:
          root: inputs.GCP-userRemediationType
      accessKeyId:
        complex:
          accessor: access_key_id
          root: alertJson.raw_abioc.event._aws_specific_fields
      autoAccessKeyRemediation:
        complex:
          root: inputs.autoAccessKeyRemediation
      autoBlockIndicators:
        complex:
          root: inputs.autoBlockIndicators
      autoResourceRemediation:
        simple: "False"
      autoUserRemediation:
        complex:
          root: inputs.autoUserRemediation
      cloudProvider:
        complex:
          accessor: cloudprovider
          root: alert
      region:
        complex:
          accessor: region
          root: alertJson.raw_abioc.event
      resourceGroup:
        complex:
          accessor: referenced_resource
          root: alertJson.raw_abioc.event
          transformers:
          - args:
              delimiter:
                value:
                  simple: /
              fields:
                value:
                  simple: "5"
            operator: Cut
      resourceName:
        complex:
          accessor: referenced_resource_name
          root: alertJson.raw_abioc.event
      resourceZone:
        complex:
          accessor: zone
          root: alertJson.raw_abioc.event
      username:
        complex:
          accessor: identity_name
          root: alertJson.raw_abioc.event
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        This playbook provides response playbooks for:
        - AWS
        - Azure
        - GCP

        The response actions available are:
        - Terminate/Shut down/Power off an instance
        - Delete/Disable a user
        - Delete/Revoke/Disable credentials
        - Block indicators
      id: c74e0107-fdaa-4a6a-8d3b-f4ab5f4ddeff
      iscommand: false
      name: Cloud Response - Generic
      playbookId: Cloud Response - Generic
      type: playbook
      version: -1
    taskid: c74e0107-fdaa-4a6a-8d3b-f4ab5f4ddeff
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1930
        }
      }
  "82":
    continueonerrortype: ""
    id: "82"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 0
      wait: 1
    nexttasks:
      '#none#':
      - "50"
    note: false
    quietmode: 2
    scriptarguments:
      GCPProjectName:
        complex:
          accessor: cloudproject
          root: alert
      cloudIdentityType:
        complex:
          accessor: cloudidentitytype
          root: alert
      cloudProvider:
        complex:
          accessor: cloudprovider
          root: alert
      username:
        complex:
          accessor: username
          root: alert
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: This playbook is responsible for collecting and enriching data
        on Identity Access Management (IAM) in cloud environments (AWS, Azure, and
        GCP).
      id: 47581c50-b254-476b-8458-b375454cd095
      iscommand: false
      name: Cloud IAM Enrichment - Generic
      playbookId: Cloud IAM Enrichment - Generic
      type: playbook
      version: -1
    taskid: 47581c50-b254-476b-8458-b375454cd095
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 340,
          "y": 430
        }
      }
  "83":
    continueonerrortype: ""
    id: "83"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "84"
    note: false
    quietmode: 2
    scriptarguments:
      manual_severity:
        simple: high
    separatecontext: false
    skipunavailable: true
    task:
      brand: Builtin
      description: commands.local.cmd.set.parent.alert.field
      id: 03fb2c84-97c4-4a5e-86d9-14eaffeb57bb
      iscommand: true
      name: Set Alert Severity to High
      script: Builtin|||setParentIncidentFields
      type: regular
      version: -1
    taskid: 03fb2c84-97c4-4a5e-86d9-14eaffeb57bb
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1250
        }
      }
  "84":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              complex:
                root: inputs.ShouldOpenTicket
          operator: isEqualString
          right:
            value:
              simple: "True"
      label: "yes"
    continueonerrortype: ""
    id: "84"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "85"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Checks whether to open a ticket automatically in a ticketing system.
      id: 9741fe58-9cdb-4b1d-81c4-da1c0eed30d3
      iscommand: false
      name: Should open a ticket automatically in a ticketing system?
      type: condition
      version: -1
    taskid: 9741fe58-9cdb-4b1d-81c4-da1c0eed30d3
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 550,
          "y": 1410
        }
      }
  "85":
    continueonerrortype: ""
    id: "85"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    loop:
      exitCondition: ""
      iscommand: false
      max: 100
      wait: 1
    nexttasks:
      '#none#':
      - "8"
    note: false
    quietmode: 0
    scriptarguments:
      CommentToAdd:
        complex:
          root: inputs.CommentToAdd
      ZendeskAssigne:
        complex:
          root: inputs.ZendeskAssigne
      ZendeskCollaborators:
        complex:
          root: inputs.ZendeskCollaborators
      ZendeskPriority:
        complex:
          root: inputs.ZendeskPriority
      ZendeskRequester:
        complex:
          root: inputs.ZendeskRequester
      ZendeskStatus:
        complex:
          root: inputs.ZendeskStatus
      ZendeskSubject:
        complex:
          root: inputs.ZendeskSubject
      ZendeskTags:
        complex:
          root: inputs.ZendeskTags
      ZendeskType:
        complex:
          root: inputs.ZendeskType
      addCommentPerEndpoint:
        complex:
          root: inputs.addCommentPerEndpoint
      description:
        complex:
          root: inputs.description
      serviceNowAssignmentGroup:
        complex:
          root: inputs.serviceNowAssignmentGroup
      serviceNowCategory:
        complex:
          root: inputs.serviceNowCategory
      serviceNowImpact:
        complex:
          root: inputs.serviceNowImpact
      serviceNowSeverity:
        complex:
          root: inputs.serviceNowSeverity
      serviceNowShortDescription:
        complex:
          root: inputs.serviceNowShortDescription
      serviceNowTicketType:
        complex:
          root: inputs.serviceNowTicketType
      serviceNowUrgency:
        complex:
          root: inputs.serviceNowUrgency
    separatecontext: true
    skipunavailable: true
    task:
      brand: ""
      description: "`Ticket Management - Generic` allows you to open new tickets or
        update comments to the existing ticket in the following ticketing systems:\n-ServiceNow
        \n-Zendesk \nusing the following sub-playbooks:\n-`ServiceNow - Ticket Management`\n-`Zendesk
        - Ticket Management`\n"
      id: a374d6fc-7d50-4b69-81d1-d26498ece1e3
      iscommand: false
      name: Ticket Management - Generic
      playbookId: Ticket Management - Generic
      type: playbook
      version: -1
    taskid: a374d6fc-7d50-4b69-81d1-d26498ece1e3
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": 290,
          "y": 1610
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "21_64_False Positive": 0.54
    },
    "paper": {
      "dimensions": {
        "height": 2705,
        "width": 1310,
        "x": 290,
        "y": -190
      }
    }
  }

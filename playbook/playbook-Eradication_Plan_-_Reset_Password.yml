contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.6.0
    itemVersion: 2.4.2
    packID: CommonPlaybooks
    packName: Common Playbooks
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
description: "This playbook is one of the sub-playbooks in the eradication plan. \nThe
  playbook executes actions to reset the user's passwords, which is a crucial step
  in the eradication process."
id: Eradication Plan - Reset Password
inputs:
- description: Set to 'True' to reset the user's password.
  key: UserRemediation
  playbookInputQuery: null
  required: false
  value:
    simple: "True"
- description: The username to reset the password for.
  key: Username
  playbookInputQuery: null
  required: false
  value: {}
name: Eradication Plan - Reset Password
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    continueonerrortype: ""
    id: "0"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 09c31255-cc27-43a6-81db-fb416e7a41fc
      iscommand: false
      name: ""
      version: -1
    taskid: 09c31255-cc27-43a6-81db-fb416e7a41fc
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 450,
          "y": 150
        }
      }
  "1":
    continueonerrortype: ""
    id: "1"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "13"
    note: false
    quietmode: 0
    scriptarguments:
      username:
        complex:
          root: ResetPasswordToUsers
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Invalidates the password of an Active Directory user.
      id: c674cf0c-a189-45a8-88d6-6f39d888ced0
      iscommand: true
      name: Auto password reset
      script: '|||ad-expire-password'
      type: regular
      version: -1
    taskid: c674cf0c-a189-45a8-88d6-6f39d888ced0
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 910
        }
      }
  "3":
    continueonerrortype: ""
    id: "3"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    note: false
    quietmode: 0
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      id: 83bdf4fd-82e0-41c8-801a-7dacf7cc7cb7
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: 83bdf4fd-82e0-41c8-801a-7dacf7cc7cb7
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1300
        }
      }
  "8":
    continueonerrortype: ""
    id: "8"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "14"
    note: false
    quietmode: 0
    results:
    - brandInstances
    scriptarguments:
      brandname:
        simple: Active Directory Query v2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: Returns 'yes' if integration brand is available. Otherwise returns
        'no'.
      id: ed488801-2746-4d07-8abc-1dfb26c26f70
      iscommand: false
      name: Is Active Directory Query v2 enabled?
      script: IsIntegrationAvailable
      type: condition
      version: -1
    taskid: ed488801-2746-4d07-8abc-1dfb26c26f70
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 510
        }
      }
  "9":
    conditions:
    - condition:
      - - ignorecase: true
          left:
            iscontext: true
            value:
              complex:
                root: inputs.UserRemediation
          operator: isEqualString
          right:
            value:
              simple: "True"
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.Username
          operator: isNotEmpty
      label: "yes"
    continueonerrortype: ""
    id: "9"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "8"
    note: false
    quietmode: 2
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |+
        Whether to reset the user's password based on the input values.


      id: 948a893e-2686-482c-8662-cde9931f0644
      iscommand: false
      name: Should reset the user password?
      type: condition
      version: -1
    taskid: 948a893e-2686-482c-8662-cde9931f0644
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 450,
          "y": 295
        }
      }
  "13":
    continueonerrortype: ""
    id: "13"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    quietmode: 2
    scriptarguments:
      key:
        simple: UserPasswordReset
      value:
        complex:
          root: ResetPasswordToUsers
    separatecontext: false
    skipunavailable: true
    task:
      brand: Builtin
      description: commands.local.cmd.set.parent.alert.context
      id: 11182b8c-325c-453c-8d1e-6890e1846610
      iscommand: true
      name: Set the user with a password reset to the Alert context
      script: Builtin|||setParentIncidentContext
      type: regular
      version: -1
    taskid: 11182b8c-325c-453c-8d1e-6890e1846610
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 1080
        }
      }
  "14":
    continueonerrortype: ""
    id: "14"
    ignoreworker: false
    isautoswitchedtoquietmode: false
    isoversize: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    quietmode: 0
    scriptarguments:
      key:
        simple: ResetPasswordToUsers
      value:
        complex:
          filters:
          - - ignorecase: true
              left:
                iscontext: true
                value:
                  simple: inputs.Username
              operator: isNotEqualString
              right:
                value:
                  simple: Administrator
          root: inputs.Username
          transformers:
          - operator: uniq
    separatecontext: false
    skipunavailable: false
    task:
      brand: ""
      description: |-
        Set a value in context under the key you entered. If no value is entered, the script doesn't do anything.

        This automation runs using the default Limited User role, unless you explicitly change the permissions.
        For more information, see the section about permissions here:
        https://docs-cortex.paloaltonetworks.com/r/Cortex-XSOAR/6.11/Cortex-XSOAR-Administrator-Guide/Automations
      id: 89912e2c-f160-47d2-8ea0-a03d2e7125eb
      iscommand: false
      name: Set users to reset password
      script: SetAndHandleEmpty
      type: regular
      version: -1
    taskid: 89912e2c-f160-47d2-8ea0-a03d2e7125eb
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 450,
          "y": 735
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "8_3_#default#": 0.16,
      "9_3_#default#": 0.14
    },
    "paper": {
      "dimensions": {
        "height": 1215,
        "width": 380,
        "x": 450,
        "y": 150
      }
    }
  }
